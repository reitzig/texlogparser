version: 2

jobs:
  test-2.3:
    docker:
      - image: circleci/ruby:2.3
    steps:
      - checkout
      - run:
          name: Prepare Ruby environment
          command: |
            ruby --version
            echo "gem `gem --version`"
            gem update --system
            gem install bundler
            bundle install
      - run: rake test DEBUG= > test_output-2.3
      - store_artifacts:
          path: test_output-2.3
  test-2.4:
    docker:
      - image: circleci/ruby:2.4
    steps:
      - checkout
      - run:
          name: Prepare Ruby environment
          command: |
            ruby --version
            echo "gem `gem --version`"
            gem update --system
            gem install bundler
            bundle install
      - run: rake test DEBUG= > test_output-2.4
      - store_artifacts:
          path: test_output-2.4
  test-2.5:
    docker:
      - image: circleci/ruby:2.5
    steps:
      - checkout
      - run:
          name: Prepare Ruby environment
          command: |
            ruby --version
            echo "gem `gem --version`"
            gem update --system
            gem install bundler
            bundle install
      - run: # We only need coverage once; use the most recent Ruby for that.
          name: Prepare test coverage reporting
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            rake test DEBUG= > test_output-2.5
            ./cc-test-reporter after-build --exit-code $?
      - store_artifacts:
          path: test_output-2.5
  build:
    docker:
      - image: circleci/ruby:2.5
    steps:
      - checkout
      - run:
          name: Prepare Ruby environment
          command: |
            ruby --version
            echo "gem `gem --version`"
            gem update --system
            gem install bundler
            bundle install
      - run:
          name: Build Gem
          command: gem build texlogparser.gemspec
      - persist_to_workspace:
          root: .
          paths:
            - .circleci/gem_credentials
            - tex_log_parser*.gem
            - test/texlogs/*.log
  doc:
    docker:
      - image: circleci/ruby:2.5
    steps:
      - checkout
      - run:
          name: Prepare Ruby environment
          command: |
            ruby --version
            echo "gem `gem --version`"
            gem update --system
            gem install bundler
            bundle install
      - run:
          name: Build Documentation
          command: rake doc
      - attach_workspace:
          at: .
      - run:
          name: Package documentation
          command: |
            gemfile="`ls tex_log_parser-*.gem`"
            cd doc
            tar -czf "../${gemfile%.gem}-doc.tar.gz" *
            cd ..
      - persist_to_workspace:
           root: .
           paths:
             - tex_log_parser-*-doc.tar.gz
  test-cli:
    docker:
      - image: circleci/ruby:2.5
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Gem
          command: gem install tex_log_parser*.gem
      - run:
         name: Test version output
         command: texlogparser -v
      - run:
          name: Test an actual log
          command: texlogparser -d -i `ls -d1 test/texlogs/*.log | head -1` > test_output-cli
      - store_artifacts:
          path: test_output-cli
  deploy:
    docker:
      - image: circleci/ruby:2.5
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploy Gem
          command: |
            echo "gem `gem --version`"
            mkdir ~/.gem
            cat .circleci/gem_credentials | sed -e "s/__RUBYGEMS_API_KEY__/${RUBYGEMS_API_KEY}/" > ~/.gem/credentials
            chmod 0600 ~/.gem/credentials
            gem push tex_log_parser*.gem
            shred -u ~/.gem/credentials
      - store_artifacts:
          path: tex_log_parser*.gem
          path: tex_log_parser*-doc.tar.gz

workflows:
  version: 2
  # Only testing; run on all commits but version tags.
  test:
    jobs:
      - test-2.3:
          filters:
            tags:
              ignore: /^v.*/
      - test-2.4:
          filters:
            tags:
              ignore: /^v.*/
      - test-2.5:
          filters:
            tags:
              ignore: /^v.*/
      - build:
          requires:
            - test-2.3
            - test-2.4
            - test-2.5
          filters:
            tags:
              ignore: /^v.*/
      - doc:
          requires:
            - build
          filters:
            tags:
              ignore: /^v.*/
      - test-cli:
          requires:
            - build
          filters:
            tags:
              ignore: /^v.*/
  # Testing and deployment; run on version tags only.
  test-and-deploy:
    jobs:
      - test-2.3:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-2.4:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-2.5:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - build:
          requires:
            - test-2.3
            - test-2.4
            - test-2.5
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - doc:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-cli:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test-cli
            - doc
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

# Notes:
# - store_artifacts --> make Gem file downloadable from Circle
# - store_test_results --> for better test analysis